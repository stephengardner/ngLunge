md-input-container.md-default-theme label,
md-input-container.md-default-theme .md-placeholder{
	color:grey !important;
}

md-input-container {

	textarea {
//		height:100px!important;
		min-height:100px;
//		overflow:auto!important;
	}
	&.md-input-has-placeholder {
		label {
			color:#333;
		}
		label {
			color :#333;//!important;
		}
	}

	// If I really want to make this position: automatic, just make sure I always have the ag-hint-spacer
	// class set.
	.ag-hint {
		//position: relative;
		//		-webkit-transform: scaleY(0);
		//		transform: scaleY(0);
		float: left;
		opacity:0;
		max-height:0;
		overflow:hidden;
		margin-top:-10px;
		margin-left:2px;
		font-size: 12px;
		line-height: 14px;
		//transition: all 2.3s;// cubic-bezier(0.55, 0, 0.55, 0.2);
		transition: max-height .4s cubic-bezier(0, 1, 0, 1) -.1s, margin-top .4s linear -.1s, opacity .6s linear;
		color: grey;
		div {
			display:none;
		}
	}
	.testingaug {
		clear:left;
		position:relative;
		float:left;
	}

	.ag-hint-wrapper {
		overflow:hidden;
		clear:left;
		position:relative;
	}
	// This spacer is used on the add-location page.
	// It allows for other content to be placed beneath the input when there is a hint.
	// It also makes sure there is space for the hint.
	// HOWEVER, if there isn't space, the hint WILL animate down (pushing content down).  Which IS OKAY.
	// This is kind of in-flux right now, I'm not sure which one to keep.
	.ag-hint-spacer {
		min-height:24px;
		float:left;
		min-width:1px;
		width: 100%;
	}

	// Important, on focus or on value, animate the hint downward.
	// There are many ways to animate height to auto, but theyre all hacky, and this seems like the best
	// PURE css approach.
	&:not(.md-input-invalid) {
		&.md-input-focused/*, &.md-input-has-value*/ {
			.ag-hint {
				&.on-focus {
					div {
						display:block;
					}
					margin-top:7px;
					opacity:1;
					display:block;
					max-height: 9999px;
					transition: max-height .4s cubic-bezier(0.5, 0, 1, 0) -.1s, margin-top .4s linear, opacity .6s linear;
					//transition-timing-function: cubic-bezier(0.5, 0, 1, 0);
					transition-delay: 0s;
					//				-webkit-transform: scaleY(1);
					//				transform: scaleY(1);
				}
			}
		}
	}

}
md-content, div {
	&.show-info {
		// When there is an icon, keep the label ABOVE the icon.
		md-input-container.md-has-icon {
			&.md-input-focused, &.md-input-has-value {
				> label {
					//left : 0;
					//					transform: translate3d(0, 28px, 0) scale(1);
				}
			}
		}

		// Color the icon when I use a font-awesome icon
		md-icon {
			i {
				padding: .2rem;
				color: grey;
			}
		}
	}
	//	&.show-info-only {
	//		md-input-container {
	//			label {
	//				font-size:2rem!important;
	//			}
	//			.md-placeholder, label {
	//				color:black!important;
	//			}
	//		}
	//		input {
	//			border-width: 0;
	//		}
	//	}
}

.form-group {
	// when form groups are used, the spacing is already applied
	md-input-container, .md-input-container {
		margin-bottom:0;
	}
}
